{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administer\\\\Desktop\\\\portfolio2\\\\portfolio\\\\src\\\\pages\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport '../styles/Posts.css';\n/**\r\n * post게시물\r\n * 1. 분류 : css, html, react, ...\r\n * 2. 작성일자 : 0:요일, 1:월, 2:일, 3:년도\r\n * 3. 제목 : UseState는 어떻게 동작할까\r\n * 4. 내용 : 어쩌구 저쩌구\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Posts() {\n  _s();\n\n  const [state, setstate] = useState({\n    posts: [{\n      type: 'react',\n      date: new Date('March 17, 2012 03:28:00').toDateString().split(' '),\n      title: 'useState 사용법',\n      content: '하지만 간혹, 이 setState가 state를 변경시킨다고 오해하시는 분들이 있는거 같아서 이 글을 작성하게 되었습니다'\n    }, {\n      type: 'js',\n      date: new Date('Decomber 17, 2002 03:28:00').toDateString().split(' '),\n      title: 'eventHandler 사용법',\n      content: '이벤트 핸들러는 잘! 사용하면된다'\n    }, {\n      type: 'js',\n      date: new Date('Decomber 17, 2002 03:28:00').toDateString().split(' '),\n      title: 'eventHandler 사용법',\n      content: '이벤트 핸들러는 잘! 사용하면된다'\n    }, {\n      type: 'js',\n      date: new Date('Decomber 17, 2002 03:28:00').toDateString().split(' '),\n      title: 'eventHandler 사용법',\n      content: '이벤트 핸들러는 잘! 사용하면된다'\n    }, {\n      type: 'js',\n      date: new Date('Decomber 17, 2002 03:28:00').toDateString().split(' '),\n      title: 'eventHandler 사용법',\n      content: '이벤트 핸들러는 잘! 사용하면된다'\n    }, {\n      type: 'js',\n      date: new Date('Decomber 17, 2002 03:28:00').toDateString().split(' '),\n      title: 'eventHandler 사용법',\n      content: '이벤트 핸들러는 잘! 사용하면된다'\n    }]\n  });\n  const {\n    posts\n  } = state;\n  let year = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD3EC\\uC2A4\\uD305 \\uC804\\uCCB4\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD3EC\\uC2A4\\uD305 \\uC8FC\\uC81C\\uBCC4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postList\",\n      children: posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postListBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postListDate\",\n            children: `${post.date[2]} ${post.date[1]}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postListLine\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postListLinevertial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postListLineCircle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postListType\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: post.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postListTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, post.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"I/tUVN2mspGtYhFRshqx5Xt0ijQ=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/Administer/Desktop/portfolio2/portfolio/src/pages/Posts.js"],"names":["React","useState","useRef","Posts","state","setstate","posts","type","date","Date","toDateString","split","title","content","year","map","post"],"mappings":"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","sourcesContent":["import React,{useState, useRef} from 'react'\r\nimport '../styles/Posts.css';\r\n\r\n\r\n\r\n/**\r\n * post게시물\r\n * 1. 분류 : css, html, react, ...\r\n * 2. 작성일자 : 0:요일, 1:월, 2:일, 3:년도\r\n * 3. 제목 : UseState는 어떻게 동작할까\r\n * 4. 내용 : 어쩌구 저쩌구\r\n */\r\n\r\nfunction Posts() {\r\n  const [state, setstate] = useState({\r\n    posts: [\r\n      {\r\n        type : 'react',\r\n        date : new Date('March 17, 2012 03:28:00').toDateString().split(' '), \r\n        title : 'useState 사용법',\r\n        content : '하지만 간혹, 이 setState가 state를 변경시킨다고 오해하시는 분들이 있는거 같아서 이 글을 작성하게 되었습니다'\r\n      }, {\r\n        type : 'js',\r\n        date : new Date('Decomber 17, 2002 03:28:00').toDateString().split(' '), \r\n        title : 'eventHandler 사용법',\r\n        content : '이벤트 핸들러는 잘! 사용하면된다',\r\n      }, {\r\n        type : 'js',\r\n        date : new Date('Decomber 17, 2002 03:28:00').toDateString().split(' '), \r\n        title : 'eventHandler 사용법',\r\n        content : '이벤트 핸들러는 잘! 사용하면된다',\r\n      }, {\r\n        type : 'js',\r\n        date : new Date('Decomber 17, 2002 03:28:00').toDateString().split(' '), \r\n        title : 'eventHandler 사용법',\r\n        content : '이벤트 핸들러는 잘! 사용하면된다',\r\n      }, {\r\n        type : 'js',\r\n        date : new Date('Decomber 17, 2002 03:28:00').toDateString().split(' '), \r\n        title : 'eventHandler 사용법',\r\n        content : '이벤트 핸들러는 잘! 사용하면된다',\r\n      }, {\r\n        type : 'js',\r\n        date : new Date('Decomber 17, 2002 03:28:00').toDateString().split(' '), \r\n        title : 'eventHandler 사용법',\r\n        content : '이벤트 핸들러는 잘! 사용하면된다',\r\n      },\r\n    ],\r\n  })\r\n  const {posts} = state;\r\n  let year = useRef();\r\n  return (\r\n    <div className='posts'>\r\n      <div className='postHeader'>\r\n        <h1>Posts</h1>\r\n        <span>포스팅 전체보기</span>\r\n        <span>포스팅 주제별</span>\r\n      </div>\r\n      <div className='postList'>\r\n        {\r\n          posts.map(post => { return(\r\n            <div key={post.title} className='postListBox'>\r\n              <div className='postListDate'>{`${post.date[2]} ${post.date[1]}` }</div>\r\n              <div className='postListLine'>\r\n                <div className='postListLinevertial'></div>\r\n                <div className='postListLineCircle'></div>\r\n              </div>\r\n              {/*\r\n              react : rgb(97,218,251)\r\n              js : rgb(241,191,38)\r\n              html : rgb(241,103,44)\r\n              css : rgb(48,169,220)\r\n\r\n               */}\r\n              <div className='postListType'>\r\n                <span>{post.type}</span>\r\n              </div>\r\n              <div className='postListTitle'>\r\n                <span>{post.title}</span>\r\n              </div>\r\n            </div>\r\n          )})\r\n        }\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Posts"]},"metadata":{},"sourceType":"module"}