{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administer\\\\Desktop\\\\portfolio2\\\\portfolio\\\\src\\\\pages\\\\SubCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../styles/SubCategory.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SubCategory() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  useEffect(() => {\n    const fetchPosts = () => {\n      setLoading(true);\n      fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(res => {\n        console.log(res);\n        setPosts(res);\n        console.log(posts);\n      });\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); //get current posts\n\n  const indexOfLastPost = currentPage * postsPerPage; // 현재보고있는창의 마지막 게시물 index\n\n  const indexOfFirstPost = indexOfLastPost - postsPerPage; // 현재 보고있는창의 첫번째 게시물 index\n\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost); // 현재 띄워줄 페이지 전체 배열\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subCategory\",\n    children: loading || currentPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-group-item\",\n      children: post.title\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SubCategory, \"+BPBRoyLxN1+E6ocVmhImLmBE6I=\");\n\n_c = SubCategory;\nexport default SubCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubCategory\");","map":{"version":3,"sources":["C:/Users/Administer/Desktop/portfolio2/portfolio/src/pages/SubCategory.js"],"names":["React","useState","useEffect","SubCategory","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","fetchPosts","fetch","then","res","json","console","log","indexOfLastPost","indexOfFirstPost","currentPosts","slice","map","post","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,2BAAP;;;AACA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,UAAU,GAAG,MAAM;AACvBL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAV,QAAAA,QAAQ,CAACU,GAAD,CAAR;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACD,OANH;AAOAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVD;;AAYAK,IAAAA,UAAU;AACX,GAdQ,EAcN,EAdM,CAAT,CANqB,CAsBrB;;AACA,QAAMO,eAAe,GAAGX,WAAW,GAAGE,YAAtC,CAvBqB,CAuB+B;;AACpD,QAAMU,gBAAgB,GAAGD,eAAe,GAAGT,YAA3C,CAxBqB,CAwBoC;;AACzD,QAAMW,YAAY,GAAGjB,KAAK,CAACkB,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB,CAzBqB,CAyBgD;;AAErE,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACIb,OAAO,IAAIe,YAAY,CAACE,GAAb,CAAiBC,IAAI,iBAChC;AAAmB,MAAA,SAAS,EAAC,iBAA7B;AAAA,gBACGA,IAAI,CAACC;AADR,OAAUD,IAAI,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,YADW;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GApCQvB,W;;KAAAA,W;AAsCT,eAAeA,WAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport '../styles/SubCategory.css';\r\nfunction SubCategory() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(10);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = () => {\r\n      setLoading(true);\r\n      fetch('https://jsonplaceholder.typicode.com/posts')\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          console.log(res);\r\n          setPosts(res);\r\n          console.log(posts);\r\n        });\r\n      setLoading(false);\r\n    }\r\n    \r\n    fetchPosts();\r\n  }, [])\r\n  \r\n  //get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage; // 현재보고있는창의 마지막 게시물 index\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage; // 현재 보고있는창의 첫번째 게시물 index\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost); // 현재 띄워줄 페이지 전체 배열\r\n\r\n  return (\r\n    <div className='subCategory'>\r\n      { loading || currentPosts.map(post => (\r\n        <div key={post.id} className='list-group-item'>\r\n          {post.title}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubCategory"]},"metadata":{},"sourceType":"module"}