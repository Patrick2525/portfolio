{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administer\\\\Desktop\\\\portfolio2\\\\portfolio\\\\src\\\\pages\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport '../styles/Posts.css';\n/**\r\n * post게시물\r\n * 1. 분류 : css, html, react, ...\r\n * 2. 작성일자 : 0:요일, 1:월, 2:일, 3:년도\r\n * 3. 제목 : UseState는 어떻게 동작할까\r\n * 4. 내용 : 어쩌구 저쩌구\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Posts() {\n  _s();\n\n  const [state, setstate] = useState({\n    posts: [{\n      type: 'React',\n      date: new Date('March 17, 2019 03:28:00').toDateString().split(' '),\n      title: 'useState 사용법',\n      content: '하지만 간혹, 이 setState가 state를 변경시킨다고 오해하시는 분들이 있는거 같아서 이 글을 작성하게 되었습니다'\n    }\n    /*{\r\n    type : 'js',\r\n    date : new Date('Decomber 17, 2019 03:28:00').toDateString().split(' '), \r\n    title : 'eventHandler 사용법',\r\n    content : '이벤트 핸들러는 잘! 사용하면된다',\r\n    }, {\r\n    type : 'React',\r\n    date : new Date('Decomber 17, 2019 03:28:00').toDateString().split(' '), \r\n    title : 'useRef 사용법',\r\n    content : 'useRef는 잘! 사용하면된다',\r\n    }, {\r\n    type : 'html',\r\n    date : new Date('Decomber 17, 2020 03:28:00').toDateString().split(' '), \r\n    title : 'ptag 사용법',\r\n    content : 'ptag는 잘! 사용하면된다',\r\n    }, {\r\n    type : 'css',\r\n    date : new Date('Decomber 17, 2020 03:28:00').toDateString().split(' '), \r\n    title : 'flexbox 사용법',\r\n    content : 'flexbox는 잘! 사용하면된다',\r\n    }, {\r\n    type : 'React',\r\n    date : new Date('Decomber 17, 2020 03:28:00').toDateString().split(' '), \r\n    title : 'container 사용법',\r\n    content : 'container는 잘! 사용하면된다',\r\n    },*/\n    ]\n  });\n  const {\n    posts\n  } = state;\n  const postCountYearly = useState({\n    year: ['2019', '2020'],\n    count: [2, 3]\n  });\n\n  const handleStyle = post => {\n    {\n      /*\r\n               react : rgb(97,218,251)\r\n               js : rgb(241,191,38)\r\n               html : rgb(241,103,44)\r\n               css : rgb(48,169,220)\r\n                  */\n    }\n    let typeColor;\n\n    switch (post.type) {\n      case 'React':\n        typeColor = 'rgb(97,218,251)';\n        break;\n\n      case 'css':\n        typeColor = 'rgb(48,169,220)';\n        break;\n\n      case 'html':\n        typeColor = 'rgb(241,103,44)';\n        break;\n\n      case 'js':\n        typeColor = 'rgb(241,191,38)';\n        break;\n\n      default:\n        break;\n    }\n\n    return {\n      Color: typeColor\n    };\n  }; //   년도 뿌리기\n  // 1. 년도를 저장할 변수\n  // 2. 변수랑 비교해서 없거나 push 하고 렌더링\n  // 3. 없거나 동일하면 no\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD3EC\\uC2A4\\uD305 \\uC804\\uCCB4\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD3EC\\uC2A4\\uD305 \\uC8FC\\uC81C\\uBCC4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postList\",\n      children: posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postListBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postListDate\",\n            children: `${post.date[2]} ${post.date[1]}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postListLine\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postListLinevertial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postListLineCircle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postListType\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: () => handleStyle(post),\n              children: post.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postListTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, post.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"AiZdwW/Kq02bZTYL+FGfERjrQLY=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/Administer/Desktop/portfolio2/portfolio/src/pages/Posts.js"],"names":["React","useState","useRef","Posts","state","setstate","posts","type","date","Date","toDateString","split","title","content","postCountYearly","year","count","handleStyle","post","typeColor","Color","map"],"mappings":"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","sourcesContent":["import React,{useState, useRef} from 'react'\r\nimport '../styles/Posts.css';\r\n\r\n\r\n\r\n/**\r\n * post게시물\r\n * 1. 분류 : css, html, react, ...\r\n * 2. 작성일자 : 0:요일, 1:월, 2:일, 3:년도\r\n * 3. 제목 : UseState는 어떻게 동작할까\r\n * 4. 내용 : 어쩌구 저쩌구\r\n */\r\n\r\nfunction Posts() {\r\n  const [state, setstate] = useState({\r\n    posts: [\r\n      {\r\n        type : 'React',\r\n        date : new Date('March 17, 2019 03:28:00').toDateString().split(' '), \r\n        title : 'useState 사용법',\r\n        content : '하지만 간혹, 이 setState가 state를 변경시킨다고 오해하시는 분들이 있는거 같아서 이 글을 작성하게 되었습니다'\r\n      }, /*{\r\n        type : 'js',\r\n        date : new Date('Decomber 17, 2019 03:28:00').toDateString().split(' '), \r\n        title : 'eventHandler 사용법',\r\n        content : '이벤트 핸들러는 잘! 사용하면된다',\r\n      }, {\r\n        type : 'React',\r\n        date : new Date('Decomber 17, 2019 03:28:00').toDateString().split(' '), \r\n        title : 'useRef 사용법',\r\n        content : 'useRef는 잘! 사용하면된다',\r\n      }, {\r\n        type : 'html',\r\n        date : new Date('Decomber 17, 2020 03:28:00').toDateString().split(' '), \r\n        title : 'ptag 사용법',\r\n        content : 'ptag는 잘! 사용하면된다',\r\n      }, {\r\n        type : 'css',\r\n        date : new Date('Decomber 17, 2020 03:28:00').toDateString().split(' '), \r\n        title : 'flexbox 사용법',\r\n        content : 'flexbox는 잘! 사용하면된다',\r\n      }, {\r\n        type : 'React',\r\n        date : new Date('Decomber 17, 2020 03:28:00').toDateString().split(' '), \r\n        title : 'container 사용법',\r\n        content : 'container는 잘! 사용하면된다',\r\n      },*/\r\n    ],\r\n  })\r\n  const {posts} = state;\r\n  const postCountYearly = useState({\r\n    year : ['2019', '2020'],\r\n    count : [2, 3],\r\n  })\r\n\r\n  const handleStyle = (post) => {\r\n    {/*\r\n              react : rgb(97,218,251)\r\n              js : rgb(241,191,38)\r\n              html : rgb(241,103,44)\r\n              css : rgb(48,169,220)\r\n\r\n               */}\r\n    let typeColor;\r\n    switch(post.type) {\r\n      case 'React':\r\n        typeColor = 'rgb(97,218,251)'\r\n        break;\r\n      case 'css':\r\n        typeColor = 'rgb(48,169,220)'\r\n        break;\r\n      case 'html':\r\n        typeColor = 'rgb(241,103,44)'\r\n        break;\r\n      case 'js':\r\n        typeColor = 'rgb(241,191,38)'\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return { Color: typeColor}\r\n  }\r\n\r\n\r\n//   년도 뿌리기\r\n\r\n// 1. 년도를 저장할 변수\r\n// 2. 변수랑 비교해서 없거나 push 하고 렌더링\r\n// 3. 없거나 동일하면 no\r\n\r\n  \r\n  \r\n  return (\r\n    <div className='posts'>\r\n      <div className='postHeader'>\r\n        <h1>Posts</h1>\r\n        <span>포스팅 전체보기</span>\r\n        <span>포스팅 주제별</span>\r\n      </div>\r\n      <div className='postList'>\r\n        {\r\n          posts.map(post => { return(\r\n            <div key={post.title} className='postListBox'>\r\n              <div className='postListDate'>{`${post.date[2]} ${post.date[1]}` }</div>\r\n              <div className='postListLine'>\r\n                <div className='postListLinevertial'></div>\r\n                <div className='postListLineCircle'></div>\r\n              </div>\r\n              <div className='postListType'>\r\n                <span style={() => handleStyle(post)}>{post.type}</span>\r\n              </div>\r\n              <div className='postListTitle'>\r\n                <span>{post.title}</span>\r\n              </div>\r\n            </div>\r\n          )})\r\n        }\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Posts"]},"metadata":{},"sourceType":"module"}