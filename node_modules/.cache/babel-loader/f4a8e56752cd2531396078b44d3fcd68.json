{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administer\\\\Desktop\\\\portfolio2\\\\portfolio\\\\src\\\\pages\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport { faChessBoard } from '@fortawesome/free-solid-svg-icons';\nimport React, { useState, useRef } from 'react';\nimport '../styles/Posts.css';\n/**\r\n * post게시물\r\n * 1. 분류 : css, html, react, ...\r\n * 2. 작성일자 : 0:요일, 1:월, 2:일, 3:년도\r\n * 3. 제목 : UseState는 어떻게 동작할까\r\n * 4. 내용 : 어쩌구 저쩌구\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Posts() {\n  _s();\n\n  const [state, setstate] = useState({\n    posts: [{\n      type: 'React',\n      date: new Date('March 17, 2019 03:28:00').toDateString().split(' '),\n      title: 'useState 사용법',\n      content: '하지만 간혹, 이 setState가 state를 변경시킨다고 오해하시는 분들이 있는거 같아서 이 글을 작성하게 되었습니다'\n    }, {\n      type: 'js',\n      date: new Date('Decomber 17, 2019 03:28:00').toDateString().split(' '),\n      title: 'eventHandler 사용법',\n      content: '이벤트 핸들러는 잘! 사용하면된다'\n    }, {\n      type: 'React',\n      date: new Date('Decomber 17, 2019 03:28:00').toDateString().split(' '),\n      title: 'useRef 사용법',\n      content: 'useRef는 잘! 사용하면된다'\n    }, {\n      type: 'html',\n      date: new Date('Decomber 17, 2020 03:28:00').toDateString().split(' '),\n      title: 'ptag 사용법',\n      content: 'ptag는 잘! 사용하면된다'\n    }, {\n      type: 'css',\n      date: new Date('Decomber 17, 2020 03:28:00').toDateString().split(' '),\n      title: 'flexbox 사용법',\n      content: 'flexbox는 잘! 사용하면된다'\n    }, {\n      type: 'React',\n      date: new Date('Decomber 17, 2020 03:28:00').toDateString().split(' '),\n      title: 'container 사용법',\n      content: 'container는 잘! 사용하면된다'\n    }, {\n      type: 'React',\n      date: new Date('Decomber 17, 2021 03:28:00').toDateString().split(' '),\n      title: 'JSX 사용법',\n      content: 'JSX는 잘! 사용하면된다'\n    }]\n  });\n  const {\n    posts\n  } = state;\n  const [stateShow, setStateShow] = useState({\n    postsShow: posts\n  });\n  const {\n    postsShow\n  } = stateShow;\n  const currnetYear = useRef('');\n\n  const handleTypeStyle = type => {\n    let typeColor;\n\n    switch (type) {\n      case 'React':\n        typeColor = 'rgb(97,218,251)';\n        break;\n\n      case 'css':\n        typeColor = 'rgb(48,169,220)';\n        break;\n\n      case 'html':\n        typeColor = 'rgb(241,103,44)';\n        break;\n\n      case 'js':\n        typeColor = 'rgb(241,191,38)';\n        break;\n\n      default:\n        break;\n    }\n\n    return {\n      backgroundColor: typeColor\n    };\n  }; //   년도 뿌리기\n  // 1. 년도를 저장할 변수\n  // 2. 변수랑 비교해서 없거나 push 하고 렌더링\n  // 3. 없거나 동일하면 no\n\n\n  const handleYearStyle = post => {\n    const year = post.date[3];\n    const id = post.title;\n\n    if (year === '' || year !== currnetYear.current) {\n      currnetYear.current = year;\n      return {\n        display: 'block'\n      };\n    }\n  };\n\n  const TypeSelected = useRef(0);\n\n  const handleSelect = e => {\n    currnetYear.current = '';\n\n    switch (e.target.selectedIndex) {\n      case 0:\n        break;\n\n      case 1:\n        //HTML\n        TypeSelected.current = 'html';\n        break;\n\n      case 2:\n        //CSS\n        TypeSelected.current = 'css';\n        break;\n\n      case 3:\n        //JS\n        TypeSelected.current = 'js';\n        break;\n\n      case 4:\n        //React\n        TypeSelected.current = 'React';\n        break;\n    }\n\n    setStateShow({\n      postsShow: posts.filter(post => post.type === TypeSelected.current)\n    });\n  };\n\n  const [visibleAll, setVisibleAll] = useState(false);\n  const [visibleType, setvisibleType] = useState(true);\n  const [visibleSelect, setvisibleSelect] = useState(false); // 수정\n  //const [BoldAll, setBoldAll] = useState({});\n  //const [BoldType, setBoldType] = useState({});\n\n  const handleVisible = () => {\n    if (visibleAll) {\n      setVisibleAll(false);\n      setvisibleType(true); //setBoldAll({fontWeight: 'normal'});\n      //setBoldType({fontWeight: 'bold'});\n    } else {\n      //all로 go\n      setVisibleAll(true);\n      setvisibleType(false); //setBoldAll({fontWeight: 'bold'});\n      //setBoldType({fontWeight: 'normal'});\n      // 정리도해야됨\n    } //렌더링이 안되서 그럼\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), visibleAll && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"postHeaderAll\",\n        style: setBoldAll,\n        onClick: handleVisible,\n        children: \"ALL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 24\n      }, this), visibleType && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"postHeaderType\",\n        style: setBoldType,\n        onClick: handleVisible,\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }, this), visibleType && /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"postTypeSelector\",\n        onChange: handleSelect,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"none\",\n          children: \"=== \\uC120\\uD0DD ===\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"html\",\n          children: \"HTML\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"css\",\n          children: \"CSS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"js\",\n          children: \"JS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"React\",\n          children: \"React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postList\",\n      children: postsShow.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: handleYearStyle(post),\n            className: \"postListYear\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postListYearTitle\",\n              children: post.date[3]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postListYearCircle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postListBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postListDate\",\n              children: `${post.date[2]} ${post.date[1]}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postListLine\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"postListLinevertial\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"postListLineCircle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postListType\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: handleTypeStyle(post.type),\n                children: post.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postListTitle\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, post.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"fs47sKduT1t8BkN+HxTkXNtRiGk=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/Administer/Desktop/portfolio2/portfolio/src/pages/Posts.js"],"names":["faChessBoard","React","useState","useRef","Posts","state","setstate","posts","type","date","Date","toDateString","split","title","content","stateShow","setStateShow","postsShow","currnetYear","handleTypeStyle","typeColor","backgroundColor","handleYearStyle","post","year","id","current","display","TypeSelected","handleSelect","e","target","selectedIndex","filter","visibleAll","setVisibleAll","visibleType","setvisibleType","visibleSelect","setvisibleSelect","handleVisible","setBoldAll","setBoldType","map"],"mappings":"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","sourcesContent":["import { faChessBoard } from '@fortawesome/free-solid-svg-icons';\r\nimport React,{useState, useRef} from 'react'\r\nimport '../styles/Posts.css';\r\n\r\n\r\n\r\n/**\r\n * post게시물\r\n * 1. 분류 : css, html, react, ...\r\n * 2. 작성일자 : 0:요일, 1:월, 2:일, 3:년도\r\n * 3. 제목 : UseState는 어떻게 동작할까\r\n * 4. 내용 : 어쩌구 저쩌구\r\n */\r\n\r\nfunction Posts() {\r\n  const [state, setstate] = useState({\r\n    posts: [\r\n      {\r\n        type : 'React',\r\n        date : new Date('March 17, 2019 03:28:00').toDateString().split(' '), \r\n        title : 'useState 사용법',\r\n        content : '하지만 간혹, 이 setState가 state를 변경시킨다고 오해하시는 분들이 있는거 같아서 이 글을 작성하게 되었습니다'\r\n      }, {\r\n        type : 'js',\r\n        date : new Date('Decomber 17, 2019 03:28:00').toDateString().split(' '), \r\n        title : 'eventHandler 사용법',\r\n        content : '이벤트 핸들러는 잘! 사용하면된다',\r\n      }, {\r\n        type : 'React',\r\n        date : new Date('Decomber 17, 2019 03:28:00').toDateString().split(' '), \r\n        title : 'useRef 사용법',\r\n        content : 'useRef는 잘! 사용하면된다',\r\n      }, {\r\n        type : 'html',\r\n        date : new Date('Decomber 17, 2020 03:28:00').toDateString().split(' '), \r\n        title : 'ptag 사용법',\r\n        content : 'ptag는 잘! 사용하면된다',\r\n      }, {\r\n        type : 'css',\r\n        date : new Date('Decomber 17, 2020 03:28:00').toDateString().split(' '), \r\n        title : 'flexbox 사용법',\r\n        content : 'flexbox는 잘! 사용하면된다',\r\n      }, {\r\n        type : 'React',\r\n        date : new Date('Decomber 17, 2020 03:28:00').toDateString().split(' '), \r\n        title : 'container 사용법',\r\n        content : 'container는 잘! 사용하면된다',\r\n      }, {\r\n        type : 'React',\r\n        date : new Date('Decomber 17, 2021 03:28:00').toDateString().split(' '), \r\n        title : 'JSX 사용법',\r\n        content : 'JSX는 잘! 사용하면된다',\r\n      },\r\n    ],\r\n  })\r\n  const {posts} = state;\r\n  const [stateShow, setStateShow] = useState({\r\n    postsShow : posts,\r\n  });\r\n  const {postsShow} = stateShow; \r\n  const currnetYear = useRef('');\r\n  const handleTypeStyle = (type) => {\r\n    let typeColor;\r\n    switch(type) {\r\n      case 'React':\r\n        typeColor = 'rgb(97,218,251)'\r\n        break;\r\n      case 'css':\r\n        typeColor = 'rgb(48,169,220)'\r\n        break;\r\n      case 'html':\r\n        typeColor = 'rgb(241,103,44)'\r\n        break;\r\n      case 'js':\r\n        typeColor = 'rgb(241,191,38)'\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return { backgroundColor : typeColor }\r\n  }\r\n\r\n\r\n//   년도 뿌리기\r\n\r\n// 1. 년도를 저장할 변수\r\n// 2. 변수랑 비교해서 없거나 push 하고 렌더링\r\n// 3. 없거나 동일하면 no\r\n\r\n  const handleYearStyle = (post) => {\r\n    const year = post.date[3];\r\n    const id = post.title;\r\n    if(year === '' || year !== currnetYear.current) {\r\n      currnetYear.current = year;\r\n      return {display : 'block'};\r\n    }\r\n  }\r\n\r\n  const TypeSelected = useRef(0);\r\n  const handleSelect = (e) => {\r\n    currnetYear.current='';\r\n    switch(e.target.selectedIndex) {\r\n      case 0:\r\n        break;\r\n      case 1: //HTML\r\n        TypeSelected.current = 'html';\r\n        break;\r\n      case 2: //CSS\r\n        TypeSelected.current = 'css';\r\n        break;\r\n      case 3: //JS\r\n        TypeSelected.current = 'js';\r\n        break;\r\n      case 4: //React\r\n        TypeSelected.current = 'React';\r\n        break;\r\n    }\r\n    setStateShow({\r\n      postsShow: posts.filter(post => post.type === TypeSelected.current)\r\n    })\r\n  }\r\n  \r\n  const [visibleAll, setVisibleAll] = useState(false);\r\n  const [visibleType, setvisibleType] = useState(true);\r\n  const [visibleSelect, setvisibleSelect] = useState(false); // 수정\r\n  //const [BoldAll, setBoldAll] = useState({});\r\n  //const [BoldType, setBoldType] = useState({});\r\n\r\n  const handleVisible = () => {\r\n    if(visibleAll){\r\n      setVisibleAll(false);\r\n      setvisibleType(true);\r\n      //setBoldAll({fontWeight: 'normal'});\r\n      //setBoldType({fontWeight: 'bold'});\r\n    } else { //all로 go\r\n      setVisibleAll(true);\r\n      setvisibleType(false);\r\n      //setBoldAll({fontWeight: 'bold'});\r\n      //setBoldType({fontWeight: 'normal'});\r\n      // 정리도해야됨\r\n    }\r\n    //렌더링이 안되서 그럼\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='posts'>\r\n      <div className='postHeader'>\r\n        <h1>Posts</h1>\r\n        {visibleAll && <span className='postHeaderAll' style={setBoldAll} onClick={handleVisible}>ALL</span>}\r\n        {visibleType && <span className='postHeaderType' style={setBoldType} onClick={handleVisible}>Type</span>}\r\n        {visibleType && <select className='postTypeSelector' onChange={handleSelect}>\r\n          <option value='none'>=== 선택 ===</option>\r\n          <option value='html'>HTML</option>\r\n          <option value='css'>CSS</option>\r\n          <option value='js'>JS</option>\r\n          <option value='React'>React</option>\r\n        </select>}\r\n      </div>\r\n      <div className='postList'>\r\n        {\r\n          postsShow.map(post => { return(\r\n            <div key={post.title} >\r\n              <div style={handleYearStyle(post)} className='postListYear'>\r\n                <div className='postListYearTitle'>{post.date[3]}</div>\r\n                <div className='postListYearCircle'></div>\r\n              </div>\r\n              <div className='postListBox'>\r\n                <div className='postListDate'>{`${post.date[2]} ${post.date[1]}` }</div>\r\n                <div className='postListLine'>\r\n                  <div className='postListLinevertial'></div>\r\n                  <div className='postListLineCircle'></div>\r\n                </div>\r\n                <div className='postListType'>\r\n                  <span style={handleTypeStyle(post.type)}>{post.type}</span>\r\n                </div>\r\n                <div className='postListTitle'>\r\n                  <span>{post.title}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )})\r\n        }\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Posts"]},"metadata":{},"sourceType":"module"}